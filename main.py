# Form implementation generated from reading ui file '1.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtWidgets
from PyQt6.QtGui import QPalette, QBrush, QPixmap
from PyQt6.QtCore import Qt
from mesh import MeshGenerator
from visual import *
from init_conditions import Init
from realTimeAeroCoeffsUpdate import MatplotlibWidget
import os
from report import *
import re

def resource_path(relative_path):
    if hasattr(sys, "_MEIPASS"):
        return os.path.join(sys._MEIPASS, relative_path)
    return os.path.join(os.path.abspath("."), relative_path)
class Ui_group(object):
    def setupUi(self, group):
        group.setObjectName("group")
        group.resize(1920, 1080)
        self.centralwidget = QtWidgets.QWidget(parent=group)
        self.centralwidget.setObjectName("centralwidget")
        
        #Ảnh cho app
        palette = QPalette()
        pixmap = QPixmap(resource_path("pic/pic.jpg"))
        palette.setBrush(QPalette.ColorRole.Window, QBrush(pixmap))
        self.centralwidget.setAutoFillBackground(True)
        self.centralwidget.setPalette(palette)

        self.centralwidget.setStyleSheet("""
            QWidget {
            background-image: url(pic/pic1.jpg);
            background-repeat: no-repeat;
            background-position: center;
            background-attachment: fixed;
            }
             """)

        # Main layout 
        self.main_layout = QtWidgets.QHBoxLayout(self.centralwidget)
        
        # Left side - Input box layout 
        self.left_layout = QtWidgets.QVBoxLayout()
        self.main_layout.addLayout(self.left_layout, 1)  # 1 part for input boxes

        # Right side - VisualizerWidget 
        self.tabs = QTabWidget(self.centralwidget)  # Tạo QTabWidget với parent là centralwidget

        # Tạo các VisualizerWidget làm nội dung cho từng tab
        self.tab1 = VisualizerWidget(self.centralwidget)
        self.tab2 = VisualizerWidget(self.centralwidget)
        self.tab3 = MatplotlibWidget(self.centralwidget)
 
        # Thêm tab1 và tab2 vào QTabWidget
        self.tabs.addTab(self.tab1, "Mesh")
        self.tabs.addTab(self.tab2, "Results")
        self.tabs.addTab(self.tab3, "Residuals")

        # Thêm QTabWidget vào layout chính (1 part cho box, 4 part cho visual)
        self.main_layout.addWidget(self.tabs, 4)

        # Mesh box (generate section)
        self.mesh = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.mesh.setFlat(False)
        self.mesh.setCheckable(False)
        self.mesh.setObjectName("mesh")
        self.left_layout.addWidget(self.mesh)
        
        # Nút GENERATE
        self.generate = QtWidgets.QPushButton(parent=self.mesh)
        self.generate.setGeometry(QtCore.QRect(20, 210, 271, 50))
        self.generate.setObjectName("generate")
        
        # Nút REPORT
        self.report = QtWidgets.QPushButton(parent=self.mesh)
        self.report.setGeometry(QtCore.QRect(300, 210, 70, 50))
        self.report.setObjectName("report")
        self.report.hide()
        
        # Box chọn loại airfoil
        self.type_of_naca = QtWidgets.QComboBox(parent=self.mesh)
        self.type_of_naca.setGeometry(QtCore.QRect(20, 50, 271, 31))
        self.type_of_naca.setEditable(True)
        self.type_of_naca.setObjectName("type_of_naca")
        self.type_of_naca.addItem("")
        self.type_of_naca.addItem("")
        self.type_of_naca.addItem("")

        # Box chọn tên airfoil
        self.type = QtWidgets.QComboBox(parent=self.mesh)
        self.type.setGeometry(QtCore.QRect(20, 130, 271, 31))
        self.type.setEditable(True)
        self.type.setCurrentText("")
        self.type.setDuplicatesEnabled(False)
        self.type.setObjectName("type")
        
        # Box chọn loại airfoil do người dùng nhập
        self.type_line = QtWidgets.QLineEdit(parent=self.mesh)
        self.type_line.setGeometry(self.type.geometry())
        self.type_line.setObjectName("type_line")
        self.type_line.hide()

        self.type_of_naca.currentTextChanged.connect(self.airfoil_type)

        self.label = QtWidgets.QLabel(parent=self.mesh)
        self.label.setGeometry(QtCore.QRect(30, 30, 81, 16))
        self.label.setObjectName("label")

        self.label_2 = QtWidgets.QLabel(parent=self.mesh)
        self.label_2.setGeometry(QtCore.QRect(30, 110, 71, 16))
        self.label_2.setObjectName("label_2")

        # Hộp thoại điều kiện ban đầu
        self.groupBox = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.groupBox.setObjectName("groupBox")
        self.left_layout.addWidget(self.groupBox)
        self.groupBox.hide()  # Ẩn đi khi tạo lưới

        self.mach = QtWidgets.QLineEdit(parent=self.groupBox)
        self.mach.setGeometry(QtCore.QRect(20, 90, 211, 22))
        self.mach.setText("")
        self.mach.setObjectName("mach")

        self.aoa = QtWidgets.QLineEdit(parent=self.groupBox)
        self.aoa.setGeometry(QtCore.QRect(20, 120, 211, 22))
        self.aoa.setText("")
        self.aoa.setObjectName("aoa")

        self.temp = QtWidgets.QLineEdit(parent=self.groupBox)
        self.temp.setGeometry(QtCore.QRect(20, 150, 211, 22))
        self.temp.setText("")
        self.temp.setObjectName("temp")

        self.pressure = QtWidgets.QLineEdit(parent=self.groupBox)
        self.pressure.setGeometry(QtCore.QRect(20, 180, 211, 22))
        self.pressure.setText("")
        self.pressure.setObjectName("pressure")

        self.solver = QtWidgets.QComboBox(parent=self.groupBox)
        self.solver.setGeometry(QtCore.QRect(20, 50, 211, 31))
        self.solver.setEditable(False)
        self.solver.setObjectName("solver")
        self.solver.addItem("")
        self.solver.addItem("")
        self.solver.addItem("")
        self.solver.addItem("")
        self.solver.addItem("")
        self.solver.addItem("")

        self.label_3 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(20, 30, 51, 20))
        self.label_3.setObjectName("label_3")

        self.label_4 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(240, 120, 49, 21))
        self.label_4.setObjectName("label_4")

        self.label_5 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_5.setGeometry(QtCore.QRect(240, 150, 49, 21))
        self.label_5.setObjectName("label_5")

        self.label_6 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_6.setGeometry(QtCore.QRect(240, 180, 49, 21))
        self.label_6.setObjectName("label_6")
  
        # Box optimize
        self.optimize = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.optimize.setFlat(False)
        self.optimize.setCheckable(False)
        self.optimize.setObjectName("mesh")
        self.left_layout.addWidget(self.optimize)
        self.optimize.hide()

        # Nút RUN
        self.run = QtWidgets.QPushButton(parent=self.groupBox)
        self.run.setGeometry(QtCore.QRect(20, 210, 271, 51))
        self.run.setObjectName("run")

        # Các trường quan sát trong tab 2
        self.field = QtWidgets.QComboBox(parent=self.tab2)
        self.field.setEditable(False)
        self.field.setCurrentText("Pressure")
        self.field.setDuplicatesEnabled(False)
        self.field.setObjectName("field")
        self.field.addItems(["Pressure", "Temperature", "Velocity"])

        self.res=MatplotlibWidget()

        group.setCentralWidget(self.centralwidget)

        # Thanh trạng thái khi chạy các quá trình
        self.statusbar = QtWidgets.QStatusBar(parent=group)
        self.statusbar.setObjectName("statusbar")
        group.setStatusBar(self.statusbar)

        group.showMaximized()

        self.retranslateUi(group)
        QtCore.QMetaObject.connectSlotsByName(group)

        # Kết nối các nút với chức năng
        self.generate.clicked.connect(lambda: self.groupBox.show())
        self.generate.clicked.connect(self.progress_bar)
        self.generate.clicked.connect(self.airfoil)
        self.report.clicked.connect(self.export_report)
        self.run.clicked.connect(self.sim)
        self.run.clicked.connect(self.progress_bar)
        self.run.clicked.connect(lambda: self.report.show())
        self.field.activated.connect(self.show)

    
    def export_report(self): # Xuất báo cáo 
        code=MeshGenerator.naca_code(group=self.type_of_naca.currentText(),type=self.type.currentText())
        self.export = export(mach=self.mach.text(), 
                             aoa=self.aoa.text(), 
                             temp=self.temp.text(), 
                             pressure=self.pressure.text(), 
                             data=self.type.currentText(), 
                             csv_path=rf"NACA_{code}\history.csv", 
                             mesh_path=rf"NACA_{code}\NACA_{code}_mesh.png",
                             field_path=rf"NACA_{code}\NACA_{code}_{self.field.currentText()}.png",
                             plot_path=rf"NACA_{code}\plot.png",
                             )
        self.inform()

    def progress_bar(self): #Định nghĩa thanh tiến trình 
        # Tạo progress bar
        self.progress = QtWidgets.QProgressBar()
        self.progress.setMinimum(0)
        self.progress.setMaximum(0)
        self.statusbar.addPermanentWidget(self.progress)  # Thêm vào status bar


    def retranslateUi(self, group): #Đặt tên cho các item 
        _translate = QtCore.QCoreApplication.translate
        group.setWindowTitle(_translate("group", "Airfoil CFD Simulation"))

        self.mesh.setTitle(_translate("group", "Mesh"))
        self.generate.setText(_translate("group", "GENERATE"))
        self.report.setText(_translate("group", "REPORT"))
        self.type_of_naca.setItemText(0, _translate("group", "NACA 4 digit"))
        self.type_of_naca.setItemText(1, _translate("group", "NACA 5 digit"))
        self.type_of_naca.setItemText(2, _translate("group", "Others"))
        self.label.setText(_translate("group", "Select group"))
        self.label_2.setText(_translate("group", "Select airfoil"))

        self.optimize.setTitle(_translate("group", "Optimization"))

        self.groupBox.setTitle(_translate("group", "Initial Conditions"))
        self.mach.setPlaceholderText(_translate("group", "Mach number"))
        self.aoa.setPlaceholderText(_translate("group", "AOA"))
        self.temp.setPlaceholderText(_translate("group", "Temperature"))
        self.pressure.setPlaceholderText(_translate("group", "Pressure"))

        self.solver.setItemText(0, _translate("group", "EULER"))
        self.solver.setItemText(1, _translate("group", "NAVIER-STOKES"))
        self.solver.setItemText(2, _translate("group", "WAVE EQUATION"))
        self.solver.setItemText(3, _translate("group", "HEAT EQUATION"))
        self.solver.setItemText(4, _translate("group", "FEM ELASTICITY"))
        self.solver.setItemText(5, _translate("group", "POISSON EQUATION"))

        self.label_3.setText(_translate("group", "Solver"))
        self.label_4.setText(_translate("group", "(Degree)"))
        self.label_5.setText(_translate("group", "(K)"))
        self.label_6.setText(_translate("group", "(Pa)"))
        self.run.setText(_translate("group", "RUN"))

        # Danh sách các airfoil có sẵn
        airfoils = ["NACA 0012", "NACA 2412", "NACA 63206", "NACA 63209"]

        # Tạo completer và gán vào QLineEdit
        completer = QCompleter(airfoils)
        completer.setCaseSensitivity(Qt.CaseSensitivity.CaseInsensitive)  # Không phân biệt hoa/thường
        self.type_line.setCompleter(completer)

    def inform(self): #Box thông báo sau khi hoàn thành
        msg=QtWidgets.QMessageBox()
        msg.setWindowFlags(msg.windowFlags() | Qt.WindowType.WindowStaysOnTopHint)
        msg.setInformativeText('Success!')
        msg.exec()
        
    def airfoil_type(self, group): #Chọn loại airfoil
        if group == "NACA 4 digit":
            self.type.show()
            self.type.clear()
            self.type.addItems(["NACA 0012", "NACA 2412"])
        elif group == "NACA 5 digit":
            self.type.show()
            self.type.clear()
            self.type.addItems(["NACA 63206", "NACA 63209"])
        elif group == "Others":
            self.type.hide()
            self.type_line.show()
            # Danh sách các airfoil có sẵn có trong database
            airfoils = ["NACA 0010", "NACA 2345", "NACA JQKA", "NACA 6868"]
            # Tạo completer và gán vào QLineEdit
            completer = QCompleter(airfoils)
            completer.setCaseSensitivity(Qt.CaseSensitivity.CaseInsensitive)  # Không phân biệt hoa/thường
            self.type_line.setCompleter(completer)
    
    def airfoil(self): #Generate and post-processing mesh
        self.gen=MeshGenerator(group=self.type_of_naca.currentText(),type=self.type.currentText())
        self.gen.mesh_generated.connect(self.on_mesh_generated) #Transmit mesh file data
        self.gen.start()
        self.gen.finished.connect(self.inform)
        self.gen.finished.connect(lambda: self.progress.hide())
        self.gen.finished.connect(lambda: self.tabs.setCurrentIndex(0)) 
        self.gen.finished.connect(lambda: self.tab1.show_mesh(data=self.data["mesh_vtk"], code=''.join(re.findall(r'\d+', self.type.currentText()))))
    def on_mesh_generated(self, data): #Create plug for data from mesh_generated 
        self.data=data

    def sim(self): #Run simulation
        code=MeshGenerator.naca_code(group=self.type_of_naca.currentText(),type=self.type.currentText())
        mesh_path = os.path.join(f'NACA_{code}', f"mesh_airfoil_{code}.su2" ) 
        self.run=Init(solver=self.solver.currentText(),mach=self.mach.text(),aoa=self.aoa.text(),temperature=self.temp.text(),pressure=self.pressure.text(), mesh_path=mesh_path, folder_name=f'NACA_{code}')
        self.run.start()
        self.run.finished.connect(self.inform)
        self.run.finished.connect(lambda: self.progress.hide())
        self.run.finished.connect(lambda: self.tabs.setCurrentIndex(1)) 
        self.run.finished.connect(self.show)
    def show(self):
        code=MeshGenerator.naca_code(group=self.type_of_naca.currentText(),type=self.type.currentText())
        self.tab2.show(data=os.path.join(f'NACA_{code}', 'flow.vtu'), field=self.field.currentText(), code=''.join(re.findall(r'\d+', self.type.currentText())))
        self.residuals()

    def residuals(self):#Plot đồ thị thể hiện tiến trình hội tụ 
        self.tab3.path(history_file_path=os.path.join(f'NACA_{''.join(re.findall(r'\d+', self.type.currentText()))}', 'history.csv'))      
        self.tab3.update_plot()                      
 
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    group = QtWidgets.QMainWindow()
    ui = Ui_group()
    ui.setupUi(group)
    group.show()
    sys.exit(app.exec())
